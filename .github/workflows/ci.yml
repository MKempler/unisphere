name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      CI: 'true'
      DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/unisphere_test?schema=public'

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Setup PNPM
      uses: pnpm/action-setup@v2
      with:
        version: 7
        run_install: false
    
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
    
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Generate Prisma Client
      run: cd packages/server && npx prisma generate

    - name: Lint
      run: pnpm lint
    
    - name: Build
      run: pnpm build
    
    - name: Test
      run: pnpm test
      env:
        JWT_SECRET: 'test-jwt-secret'
        FEDERATION_TIMEOUT_MS: '1000'
        PEERS: 'http://localhost:4100'

  docker:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./packages/server/Dockerfile
        push: false
        tags: unisphere/server:latest 